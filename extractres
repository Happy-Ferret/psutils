#!/usr/bin/env perl
# extractres: extract resources from PostScript file
#
# Copyright (C) Angus J. C. Duggan 1991-1995
# See file LICENSE for details.

use strict;
use warnings;
use File::Basename;
use Getopt::Long;

my $prog = basename($0);

my %resources = ();		# list of resources included
my %merge = ();			# list of resources extracted this time

# Resource extensions
my %extn = ("font" => ".pfa", "file" => ".ps", "procset" => ".ps",
            "pattern" => ".pat", "form" => ".frm", "encoding" => ".enc");
# Resource types
my %type = ("%%BeginFile:" => "file", "%%BeginProcSet:" => "procset",
            "%%BeginFont:" => "font");

sub usage {
  print STDERR "Usage: $prog [-merge] [FILE]\n";
  exit 1;
}

my $merge;
usage() unless GetOptions('merge' => \$merge);

my $body = (defined($ENV{TMPDIR}) ? "$ENV{TMPDIR}/" : "") . "body$$.ps";
open(BODY, $body) && die "Temporary file $body already exists";
open(BODY, ">$body") || die "Can't write file $body";

sub filename {			# make filename for resource in @_
   my $name;
   foreach (@_) {		# sanitise name
      s/[!()\$\#*&\\\|\`\'\"\~\{\}\[\]\<\>\?]//g;
      $name .= $_;
   }
   $name =~ s@.*/@@;		# drop directories
   die "Filename not found for resource ", join(" ", @_), "\n"
      if $name =~ /^$/;
   return $name;
}

my $output = *STDOUT;		# start writing header out
my $saveout;
while (<>) {
   if (/^%%BeginResource:/ || /^%%BeginFont:/ || /^%%BeginProcSet:/) {
      my ($comment, @res) = split(/\s+/); # look at resource type
      my $type = defined($type{$comment}) ? $type{$comment} : shift(@res);
      my $name = filename(@res, $extn{$type}); # make file name
      $saveout = $output;
      if (!$resources{$name}) {
	 print "%%IncludeResource: $type ", join(" ", @res), "\n";
	 if (!open(*RES, $name)) {
	    open RES, ">$name" || die "Can't write file $name";
	    $resources{$name} = $name;
	    $merge{$name} = $merge;
	    $output = *RES;
	 } else {		# resource already exists
	    close(RES);
	    undef $output;
	 }
      } elsif ($merge{$name}) {
	 open RES, ">>$name" || die "Can't append to file $name";
	 $output = *RES;
      } else {			# resource already included
	 undef $output;
      }
   } elsif (/^%%EndResource/ || /^%%EndFont/ || /^%%EndProcSet/) {
      if (defined $output) {
	 print $output $_;
	 close($output);
      }
      $output = $saveout;
      next;
   } elsif ((/^%%EndProlog/ || /^%%BeginSetup/ || /^%%Page:/)) {
      $output = *BODY;
   }
   print $output $_
      if defined $output;
}

close(BODY);			# close body output file
system "cat", $body;		# copy body output to stdout
unlink($body);			# dispose of body file
